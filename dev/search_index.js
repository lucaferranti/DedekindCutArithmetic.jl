var documenterSearchIndex = {"docs":
[{"location":"api/#reference","page":"API","title":"Reference","text":"","category":"section"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [DedekindCutArithmetic]","category":"page"},{"location":"api/#DedekindCutArithmetic.DedekindCutArithmetic","page":"API","title":"DedekindCutArithmetic.DedekindCutArithmetic","text":"DedekindCutArithmetic\n\nJulia library implementing exact real arithmetic using Dedekind cuts and abstract stone duality.\n\n\n\n\n\n","category":"module"},{"location":"api/#DedekindCutArithmetic.AbstractCut","page":"API","title":"DedekindCutArithmetic.AbstractCut","text":"Abstract type for a generic cut.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.AbstractDedekindReal","page":"API","title":"DedekindCutArithmetic.AbstractDedekindReal","text":"Abstract type representing a generic real number.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.AbstractDyadic","page":"API","title":"DedekindCutArithmetic.AbstractDyadic","text":"Represents a dyadic number or a dyadic interval.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.BinaryCompositeCut","page":"API","title":"DedekindCutArithmetic.BinaryCompositeCut","text":"Composite cut lazily representing the result of applying  an arithmetic binary operation f to child1 and child2.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.DedekindCut","page":"API","title":"DedekindCutArithmetic.DedekindCut","text":"Representation of a real number x as a dedekind cut.\n\nFields\n\nlow : function approximating the number from below. Evaluates to true for every number  x.\nhigh : function approximating the number from above. Evaluates to true for every number  x.\nmpa : Cached most precise approximation computed so far. This is a dyadic interval bound x which is updated every time the cut is refined to a higher precision.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.DyadicInterval","page":"API","title":"DedekindCutArithmetic.DyadicInterval","text":"Represents an interval with lower and uppper bound expressed as dyadic numbers. Note this is a generalized interval, that is, the lower bound can be greater than the upper bound.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.DyadicReal","page":"API","title":"DedekindCutArithmetic.DyadicReal","text":"Represents a dyadic number in the form fracm2^-e, with d  ℤ and e  ℕ.\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.RationalCauchyCut","page":"API","title":"DedekindCutArithmetic.RationalCauchyCut","text":"This represents a dyadic interval [(m-1)/2^e, (m+1)/2^e] approximating a non-dyadic rational number.\n\nThis is a special-case of Dedekind cut representing a rational number for which we do not need iterative refinement\n\n\n\n\n\n","category":"type"},{"location":"api/#DedekindCutArithmetic.UnaryCompositeCut","page":"API","title":"DedekindCutArithmetic.UnaryCompositeCut","text":"Composite cut lazily representing the result of applying  an arithmetic unary operation f to child.\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split-Tuple{DyadicInterval}","page":"API","title":"Base.split","text":"Split the interval in two halves.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.dual-Tuple{DyadicInterval}","page":"API","title":"DedekindCutArithmetic.dual","text":"Given the interval a b, return its dual b a.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.exists-Tuple{DyadicInterval, Function}","page":"API","title":"DedekindCutArithmetic.exists","text":"Check whether  x  dom  f(x)  0\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.forall-Tuple{DyadicInterval, Function}","page":"API","title":"DedekindCutArithmetic.forall","text":"Check whether  x  dom  f(x)  0\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.high-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.high","text":"Lower bound of the real number approximated by the cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.isbackward-Tuple{DyadicInterval}","page":"API","title":"DedekindCutArithmetic.isbackward","text":"Returns true if the lower bound is strictly bigger than the upper bound.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.isforward-Tuple{DyadicInterval}","page":"API","title":"DedekindCutArithmetic.isforward","text":"Returns true if the lower bound is smaller or equal of the upper bound.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.low-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.low","text":"Lower bound of the real number approximated by the cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.make_prec-Tuple{Int64, DyadicInterval}","page":"API","title":"DedekindCutArithmetic.make_prec","text":"Given precision p and interval i, compute a precision which is better than p and is suitable for working with intervals of width i.\n\nTaken from: https://github.com/andrejbauer/marshall/blob/c9f1f6466e879e8db11a12b9bc030e62b07d8bd2/src/eval.ml#L22-L26\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.midpoint-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.midpoint","text":"Midpoint of the current most precise approximation of the cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.overlaps-Tuple{DedekindCutArithmetic.AbstractDedekindReal, DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.overlaps","text":"Whether or not two cuts are overlapping in the current precision\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.preprocess_expression-Tuple{Any}","page":"API","title":"DedekindCutArithmetic.preprocess_expression","text":"Transformations on the expression before being processed by @cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.radius-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.radius","text":"Width of the current precise appoximation of t mosthe cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.refine!-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.refine!","text":"Refine the given cut to give an approximation with precision bits of accuracy. If the required accuracy cannot be achieved within max_iter iterations, return the current estimate with a warning.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.refine!-Tuple{RationalCauchyCut}","page":"API","title":"DedekindCutArithmetic.refine!","text":"Evaluate the Cauchy sequence representing a rational number with n bits of precision.\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.thirds-Tuple{DyadicInterval}","page":"API","title":"DedekindCutArithmetic.thirds","text":"Return two points that divide the interval in three parts with ratio 1/4, 1/2, 1/2\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.width-Tuple{DedekindCutArithmetic.AbstractDedekindReal}","page":"API","title":"DedekindCutArithmetic.width","text":"Width of the current precise appoximation of t mosthe cut\n\n\n\n\n\n","category":"method"},{"location":"api/#DedekindCutArithmetic.@cut-Tuple{Any}","page":"API","title":"DedekindCutArithmetic.@cut","text":"Macro to construct a DedekindCut.\n\nA cut is defined using the following syntax\n\n@cut x ∈ [a, b], low, high\n\nThis defines a real number x in the interval a b which is approximated by the inequality φ(x) from below and ψ(x) from above.\n\nφ and ψ can be any julia expression, also referring to variables in the scope where the macro is called.\n\nSimilarly, a and b can also be julia expressions, but they cannot depend on x.\n\n\n\n\n\n","category":"macro"},{"location":"api/#DedekindCutArithmetic.@∀-Tuple{Any}","page":"API","title":"DedekindCutArithmetic.@∀","text":"Check whether  x  dom  prop(x)\n\n\n\n\n\n","category":"macro"},{"location":"api/#DedekindCutArithmetic.@∃-Tuple{Any}","page":"API","title":"DedekindCutArithmetic.@∃","text":"Check whether  x  dom  prop(x)\n\n\n\n\n\n","category":"macro"},{"location":"91-developer/#dev_docs","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"note: Contributing guidelines\nIf you haven't, please read the Contributing guidelines first.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If you want to make contributions to this package that involves code, then this guide is for you.","category":"page"},{"location":"91-developer/#First-time-clone","page":"Developer documentation","title":"First time clone","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: If you have writing rights\nIf you have writing rights, you don't have to fork. Instead, simply clone and skip ahead. Whenever upstream is mentioned, use origin instead.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If this is the first time you work with this repository, follow the instructions below to clone the repository.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fork this repo\nClone your repo (this will create a git remote called origin)\nAdd this repo as a remote:\ngit remote add upstream https://github.com/lucaferranti/DedekindCutArithmetic.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will ensure that you have two remotes in your git: origin and upstream. You will create branches and push to origin, and you will fetch and update your local main branch from upstream.","category":"page"},{"location":"91-developer/#Linting-and-formatting","page":"Developer documentation","title":"Linting and formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Install a plugin on your editor to use EditorConfig. This will ensure that your editor is configured with important formatting settings.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We use https://pre-commit.com to run the linters and formatters. In particular, the Julia code is formatted using JuliaFormatter.jl, so please install it globally first:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # Press ]\npkg> activate\npkg> add JuliaFormatter","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To install pre-commit, we recommend using pipx as follows:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"# Install pipx following the link\npipx install pre-commit","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/#Testing","page":"Developer documentation","title":"Testing","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"As with most Julia packages, you can just open Julia in the repository folder, activate the environment, and run test:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # press ]\npkg> activate .\npkg> test","category":"page"},{"location":"91-developer/#Working-on-a-new-issue","page":"Developer documentation","title":"Working on a new issue","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We try to keep a linear history in this repo, so it is important to keep your branches up-to-date.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fetch from the remote and fast-forward your local main\ngit fetch upstream\ngit switch main\ngit merge --ff-only upstream/main\nBranch from main to address the issue (see below for naming)\ngit switch -c 42-add-answer-universe\nPush the new local branch to your personal remote repository\ngit push -u origin 42-add-answer-universe\nCreate a pull request to merge your remote branch into the org main.","category":"page"},{"location":"91-developer/#Branch-naming","page":"Developer documentation","title":"Branch naming","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If there is an associated issue, add the issue number.\nIf there is no associated issue, and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.\nUse dash separated imperative wording related to the issue (e.g., 14-add-tests, 15-fix-model, 16-remove-obsolete-files).","category":"page"},{"location":"91-developer/#Commit-message","page":"Developer documentation","title":"Commit message","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Use imperative or present tense, for instance: Add feature or Fix bug.\nHave informative titles.\nWhen necessary, add a body with details.\nIf there are breaking changes, add the information to the commit message.","category":"page"},{"location":"91-developer/#Before-creating-a-pull-request","page":"Developer documentation","title":"Before creating a pull request","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: Atomic git commits\nTry to create \"atomic git commits\" (recommended reading: The Utopic Git History).","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Make sure the tests pass.\nMake sure the pre-commit tests pass.\nFetch any main updates from upstream and rebase your branch, if necessary:\ngit fetch upstream\ngit rebase upstream/main BRANCH_NAME\nThen you can open a pull request and work with the reviewer to address any issues.","category":"page"},{"location":"91-developer/#Building-and-viewing-the-documentation-locally","page":"Developer documentation","title":"Building and viewing the documentation locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To build the documentation locally, simply run","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia docs/liveserver.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will build the documentation and open a preview in your browser. Whenever you make some changes in the documentation files, the preview will also update live.","category":"page"},{"location":"91-developer/#Making-a-new-release","page":"Developer documentation","title":"Making a new release","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To create a new release, you can follow these simple steps:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Create a branch release-x.y.z\nUpdate version in Project.toml\nUpdate the CHANGELOG.md:\nRename the section \"Unreleased\" to \"[x.y.z] - yyyy-mm-dd\" (i.e., version under brackets, dash, and date in ISO format)\nAdd a new section on top of it named \"Unreleased\"\nAdd a new link in the bottom for version \"x.y.z\"\nChange the \"[unreleased]\" link to use the latest version - end of line, vx.y.z ... HEAD.\nCreate a commit \"Release vx.y.z\", push, create a PR, wait for it to pass, merge the PR.\nGo back to main screen and click on the latest commit (link: https://github.com/lucaferranti/DedekindCutArithmetic.jl/commit/main)\nAt the bottom, write @JuliaRegistrator register","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"After that, you only need to wait and verify:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Wait for the bot to comment (should take < 1m) with a link to a PR to the registry\nFollow the link and wait for a comment on the auto-merge\nThe comment should said all is well and auto-merge should occur shortly\nAfter the merge happens, TagBot will trigger and create a new GitHub tag. Check on https://github.com/lucaferranti/DedekindCutArithmetic.jl/releases\nAfter the release is create, a \"docs\" GitHub action will start for the tag.\nAfter it passes, a deploy action will run.\nAfter that runs, the stable docs should be updated. Check them and look for the version number.","category":"page"},{"location":"90-contributing/#contributing","page":"Contributor's guide","title":"Contributor's guide","text":"","category":"section"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"First of all, huge thanks for your interest in the package! ✨","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"This page has some tips and guidelines on how to contribute.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"We welcome all kinds of contribution, including, but not limited to code, documentation, examples, bug reports, feature requests etc.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"All interactions should folow the Code of Conduct. In a nutshell, be polite and respectful.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"tip: Tip\nFeel free to ping us after a few days if there are no responses.","category":"page"},{"location":"90-contributing/#Discussions","page":"Contributor's guide","title":"Discussions","text":"","category":"section"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"If you need help using DedekindCutArithmetic.jl, you can use the helpdesk category to ask for help. This is preferable over issues, which are meant for bugs and feature requests, because discussions do not get closed once fixed and remain browsable for others.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"There is also a show and tell category to share with the world your work using DedekindCutArithmetic.jl. If your work involves a new application of DedekindCutArithmetic.jl and you also want it featured in the Applications section in the documentation, let us know. You will get help with the workflow and setup, but you are expected to do the writing 😃 .","category":"page"},{"location":"90-contributing/#Opening-issues","page":"Contributor's guide","title":"Opening issues","text":"","category":"section"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"If you think you found a bug, feel free to open an issue. Issues to suggest new features are welcome too.","category":"page"},{"location":"90-contributing/#Opening-pull-requests","page":"Contributor's guide","title":"Opening pull requests","text":"","category":"section"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"We follow the ColPrac guide for collaborative practices. New contributors should make sure to read that guide before opening their first pull request.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"If you found an issue that interests you, comment on that issue what your plans are. If the solution to the issue is clear, you can immediately create a pull request. Otherwise, say what yourfollow proposed solution is and wait for a discussion around it.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"For small changes (typos, trivial bug fixes) it is ok to open a PR directly even without an associated issue. For non-trivial changes, please open an issue first.","category":"page"},{"location":"90-contributing/","page":"Contributor's guide","title":"Contributor's guide","text":"More technical details and tips on how work with git, run tests, build documentation etc. can be found in the developer's guide.","category":"page"},{"location":"changelog/#Release-Notes","page":"Release notes","title":"Release Notes","text":"","category":"section"},{"location":"changelog/","page":"Release notes","title":"Release notes","text":"The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","category":"page"},{"location":"changelog/#[v0.1.0-–-2024-10-25](https://github.com/lucaferranti/DedekindCutArithmetic.jl/releases/tag/v0.1.0)","page":"Release notes","title":"v0.1.0 – 2024-10-25","text":"","category":"section"},{"location":"changelog/","page":"Release notes","title":"Release notes","text":"Initial release","category":"page"},{"location":"changelog/#Added","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"changelog/","page":"Release notes","title":"Release notes","text":"Define basic data structures (DyadicReal, DyadicInterval, RationalCauchyCut, DedekindCut, UnaryCompositeCut, BinaryCompositeCut)\ndefined addition, subraction and multiplication\nsupport quantifiers over simple inequality statements","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DedekindCutArithmetic","category":"page"},{"location":"#DedekindCutArithmetic.jl","page":"Home","title":"DedekindCutArithmetic.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia library for exact real arithmetic using Dedekind cuts and Abstract Stone Duality. Heavily inspired by the Marshall programming language.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you haven't already, install Julia. The easiest way is to install Juliaup. This allows to easily install and manage julia versions.\nOpen the terminal and start a julia session by typing julia.\nInstall the library by typing\njulia  using Pkg; Pkg.add(\"DedekindCutArithmetic\")\nThe package can now be loaded (in the interactive REPL or in a script file) with the command\njulia  using DedekindCutArithmetic\nThat's it, have fun!","category":"page"},{"location":"#Quickstart-example","page":"Home","title":"Quickstart example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following snippet shows how to define the squareroot of a number and the maximum of a function f 0 1 rightarrow mathbbR using Dedekind cuts. It also shows this definition is actually computable and can be used to give a tight rigorous bound of the value.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using DedekindCutArithmetic\n\n# Textbook example of dedekind cuts, define square-root\nmy_sqrt(a) = @cut x ∈ ℝ, (x < 0) ∨ (x * x < a), (x > 0) ∧ (x * x > a)\n\n# lazy computation, however it is automatically evaluated to 53 bits of precision if printed in the REPL.\nsqrt2 = my_sqrt(2);\n\n# evaluate to 80 bits precision, this gives an interval with width <2⁻⁸⁰ containing √2\nrefine!(sqrt2; precision=80)\n# [1.4142135623730949, 1.4142135623730951]\n\n# Define maximum of a function f: [0, 1] → ℝ as a Dedekind cut\nmy_max(f::Function) = @cut a ∈ ℝ, ∃(x ∈ [0, 1] : f(x) > a), ∀(x ∈ [0, 1] : f(x) < a)\n\nf = x -> x * (1 - x)\n\nfmax = my_max(f);\n\nrefine!(fmax) # evaluate to 53 bits of precision by default\n# [0.24999999999999992, 0.25000000000000006]","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Contributions are welcome! Here is a small decision tree with useful links. More details in the contributor's guide.","category":"page"},{"location":"","page":"Home","title":"Home","text":"There is a discussion section on GitHub. You can use the helpdesk category to ask for help on how to use the software or the show and tell category to simply share with the world your work using DedekindCutArithmetic.jl\nIf you find a bug or want to suggest a new feature, open an issue.\nYou are also encouraged to send pull requests (PRs). For small changes, it is ok to open a PR directly. For bigger changes, it is advisable to discuss it in an issue first. Before opening a PR, make sure to check the contributor's guide.","category":"page"},{"location":"#Copyright","page":"Home","title":"Copyright","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2024 Luca Ferranti, released under MIT license","category":"page"}]
}
